@model TinyHouseRezervasyon.Models.HomeViewModel

@{
    ViewData["Title"] = "Ana Sayfa";
}

<section class="hero-section">
    <div class="container">
        <div class="hero-content">
            <h1>TinyHouse Rezervasyon</h1>
            <p>Doğayla iç içe, huzurlu bir tatil için ideal evler</p>
            <a href="@Url.Action("Evler", "Home")" class="btn btn-primary btn-lg">Evleri Keşfet</a>
        </div>
    </div>
</section>

<section class="features-section">
    <div class="container">
        <div class="section-title">
            <h2>Neden Biz?</h2>
            <p>Size en iyi hizmeti sunmak için çalışıyoruz</p>
        </div>
        <div class="features-grid">
            <div class="feature-card">
                <i class="fas fa-home"></i>
                <h3>Özel Evler</h3>
                <p>Her biri özenle seçilmiş, konforlu ve güvenli evler</p>
            </div>
            <div class="feature-card">
                <i class="fas fa-map-marker-alt"></i>
                <h3>Stratejik Konumlar</h3>
                <p>Türkiye'nin en güzel lokasyonlarında evler</p>
            </div>
            <div class="feature-card">
                <i class="fas fa-shield-alt"></i>
                <h3>Güvenli Rezervasyon</h3>
                <p>%100 güvenli ödeme ve rezervasyon sistemi</p>
            </div>
            <div class="feature-card">
                <i class="fas fa-headset"></i>
                <h3>7/24 Destek</h3>
                <p>Her zaman yanınızda olan müşteri hizmetleri</p>
            </div>
        </div>
    </div>
</section>

<section class="popular-locations">
    <div class="container">
        <div class="section-title">
            <h2>Popüler Lokasyonlar</h2>
            <p>En çok tercih edilen bölgelerimiz</p>
        </div>
        <div class="locations-grid">
            <div class="location-card">
                <img src="/images/bolu.jpg" alt="Bolu">
                <div class="location-content">
                    <h3>Bolu</h3>
                    <p>Doğayla iç içe, huzurlu bir tatil</p>
                    <a href="@Url.Action("Evler", "Home", new { sehir = "Bolu" })" class="btn btn-outline-light">Evleri Gör</a>
                </div>
            </div>
            <div class="location-card">
                <img src="/images/izmir.jpg" alt="İzmir">
                <div class="location-content">
                    <h3>İzmir</h3>
                    <p>Ege'nin incisi, deniz manzaralı evler</p>
                    <a href="@Url.Action("Evler", "Home", new { sehir = "İzmir" })" class="btn btn-outline-light">Evleri Gör</a>
                </div>
            </div>
            <div class="location-card">
                <img src="/images/antalya.jpg" alt="Antalya">
                <div class="location-content">
                    <h3>Antalya</h3>
                    <p>Akdeniz'in muhteşem koyları</p>
                    <a href="@Url.Action("Evler", "Home", new { sehir = "Antalya" })" class="btn btn-outline-light">Evleri Gör</a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Kayıt Ol Modal -->
<div id="registerModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeRegisterModal()">&times;</span>
        <h2>Kayıt Ol</h2>
        <form id="registerForm" class="auth-form">
            <div class="form-group">
                <label for="userType">Hesap Türü</label>
                <select id="userType" name="userType" required>
                    <option value="">Seçiniz</option>
                    <option value="tenant">Kiracı</option>
                    <option value="owner">Ev Sahibi</option>
                    <option value="admin">Admin</option>
                </select>
            </div>
            <div class="form-group">
                <label for="fullName">Ad Soyad</label>
                <input type="text" id="fullName" name="fullName" required>
            </div>
            <div class="form-group">
                <label for="email">E-posta</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="phone">Telefon Numarası</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            <div class="form-group">
                <label for="username">Kullanıcı Adı</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Şifre</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Şifre Tekrar</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required>
            </div>
            <button type="submit" class="btn btn-primary">Kayıt Ol</button>
        </form>
    </div>
</div>

<!-- Giriş Yap Modal -->
<div id="loginModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeLoginModal()">&times;</span>
        <h2>Giriş Yap</h2>
        <form id="loginForm" class="auth-form">
            <div class="form-group">
                <label for="loginUserType">Hesap Türü</label>
                <select id="loginUserType" name="userType" required>
                    <option value="">Seçiniz</option>
                    <option value="tenant">Kiracı</option>
                    <option value="owner">Ev Sahibi</option>
                    <option value="admin">Admin</option>
                </select>
            </div>
            <div class="form-group">
                <label for="loginEmail">E-posta</label>
                <input type="email" id="loginEmail" name="email" required>
            </div>
            <div class="form-group">
                <label for="loginPassword">Şifre</label>
                <input type="password" id="loginPassword" name="password" required>
            </div>
            <button type="submit" class="btn btn-primary">Giriş Yap</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const searchResults = document.getElementById('searchResults');
            const houseCards = document.querySelectorAll('.house-card');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                searchResults.innerHTML = '';
                
                if (searchTerm.length < 2) {
                    searchResults.style.display = 'none';
                    return;
                }

                let hasResults = false;
                houseCards.forEach(card => {
                    const title = card.querySelector('.house-title').textContent.toLowerCase();
                    const location = card.querySelector('.house-location span').textContent.toLowerCase();
                    
                    if (title.includes(searchTerm) || location.includes(searchTerm)) {
                        const resultItem = document.createElement('div');
                        resultItem.className = 'search-result-item';
                        resultItem.innerHTML = `
                            <h4>${card.querySelector('.house-title').textContent}</h4>
                            <p>${card.querySelector('.house-location span').textContent}</p>
                        `;
                        resultItem.addEventListener('click', () => {
                            window.location.href = card.querySelector('a').href;
                        });
                        searchResults.appendChild(resultItem);
                        hasResults = true;
                    }
                });

                searchResults.style.display = hasResults ? 'block' : 'none';
            });

            // Arama sonuçlarını dışarı tıklandığında kapat
            document.addEventListener('click', function(e) {
                if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                    searchResults.style.display = 'none';
                }
            });
        });

        // Modal işlemleri
        function openRegisterModal() {
            document.getElementById('registerModal').style.display = 'block';
        }

        function closeRegisterModal() {
            document.getElementById('registerModal').style.display = 'none';
        }

        function openLoginModal() {
            document.getElementById('loginModal').style.display = 'block';
        }

        function closeLoginModal() {
            document.getElementById('loginModal').style.display = 'none';
        }

        // Form işlemleri
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch('/Account/Register', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Kayıt başarılı! Giriş yapabilirsiniz.');
                    closeRegisterModal();
                    openLoginModal();
                } else {
                    alert(data.message || 'Kayıt sırasında bir hata oluştu.');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
                alert('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');
            });
        });

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch('/Account/Login', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    alert(data.message || 'Giriş sırasında bir hata oluştu.');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
                alert('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');
            });
        });

        // Modal dışına tıklandığında kapatma
        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                event.target.style.display = 'none';
            }
        }
    </script>
}

@section Styles {
    <style>
        .hero-section {
            background-image: url('/images/hero-bg.jpg');
            background-size: cover;
            background-position: center;
            height: 600px;
            display: flex;
            align-items: center;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
            padding: var(--spacing-xl) 0;
        }

        .hero-content h1 {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: var(--spacing-md);
        }

        .hero-content p {
            font-size: 1.5rem;
            margin-bottom: var(--spacing-lg);
        }

        .features-section {
            padding: 4rem 0;
            background-color: #f8f9fa;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: var(--spacing-lg);
            margin-top: var(--spacing-xl);
        }

        .feature-card {
            text-align: center;
            padding: 2rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-5px);
        }

        .feature-icon {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 1rem;
        }

        .feature-card h3 {
            font-size: 1.25rem;
            margin-bottom: var(--spacing-sm);
            color: var(--primary-color);
        }

        .feature-card p {
            color: var(--text-muted);
            margin: 0;
        }

        .popular-locations {
            padding: 4rem 0;
        }

        .locations-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--spacing-lg);
            margin-top: var(--spacing-xl);
        }

        .location-card {
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            margin-bottom: 2rem;
        }

        .location-card img {
            width: 100%;
            height: 300px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .location-card:hover img {
            transform: scale(1.05);
        }

        .location-content {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 2rem;
            background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
            color: white;
        }

        .location-content h3 {
            font-size: 1.5rem;
            margin-bottom: var(--spacing-xs);
        }

        .location-content p {
            margin-bottom: var(--spacing-md);
            opacity: 0.9;
        }

        .btn-outline-light {
            border: 2px solid white;
            color: white;
            background: transparent;
            transition: all 0.3s ease;
        }

        .btn-outline-light:hover {
            background: white;
            color: var(--primary-color);
        }

        @@media (max-width: 768px) {
            .hero-section {
                height: 400px;
            }

            .feature-card {
                margin-bottom: 1rem;
            }

            .location-card img {
                height: 200px;
            }
        }
    </style>
}
